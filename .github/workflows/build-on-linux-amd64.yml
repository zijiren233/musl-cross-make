name: build-on-linux-amd64

on:
  workflow_dispatch:

env:
  USE_NATIVE_VERSION: v0.0.0
  UNAMESPACER: linux-amd64

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      TARGETS: ${{ steps.get_all_targets.outputs.TARGETS }}
    steps:
      - uses: actions/checkout@v4

      - name: Get all targets
        id: get_all_targets
        run: |
          declare -a arr=()
          while IFS= read -r line; do
          if [ -z "$line" ] || [ "${line:0:1}" == "#" ]; then
            continue
          fi
          arr+=("$line")
          done < scripts/triples.txt
          printf -v json '"%s",' "${arr[@]}"
          json="[${json%,}]"
          echo "TARGETS=$json" >> $GITHUB_OUTPUT

      - name: Download sources
        run: |
          bash scripts/build.sh -d

      - name: Upload sources
        uses: actions/upload-artifact@v4
        with:
          name: sources
          path: sources

  build_targets_on_linux_amd64:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - init
    strategy:
      fail-fast: false
      matrix:
        targets: ${{ fromJSON(needs.init.outputs.TARGETS) }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: sources
          path: sources

      - uses: uraimo/run-on-arch-action@v2
        name: Build
        id: build
        with:
          arch: none
          distro: none
          base_image: amd64/alpine:latest
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/build"
          shell: /bin/sh
          install: |
            apk add --no-cache \
              coreutils \
              curl \
              bzip2 \
              xz \
              make \
              bison \
              rsync \
              patch \
              perl \
              flex \
              g++
          run: |
            cd /build
            sh scripts/build.sh \
                -LDPO1 \
                -n \
                -T "${{ matrix.targets }}"

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}
          path: dist
