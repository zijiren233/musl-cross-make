name: build-on-linux-s390x

on:
  workflow_dispatch:

env:
  USE_NATIVE_VERSION: v0.0.0
  UNAMESPACER: linux-s390x

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      TARGETS: ${{ steps.get_all_targets.outputs.TARGETS }}
    steps:
      - uses: actions/checkout@v4

      - name: Get all targets
        id: get_all_targets
        run: |
          declare -a arr=()
          while IFS= read -r line; do
          if [ -z "$line" ] || [ "${line:0:1}" == "#" ]; then
            continue
          fi
          arr+=("$line")
          done < scripts/triples.txt
          printf -v json '"%s",' "${arr[@]}"
          json="[${json%,}]"
          echo "TARGETS=$json" >> $GITHUB_OUTPUT

      - name: Download sources
        run: |
          bash scripts/build.sh -d

      - name: Upload sources
        uses: actions/upload-artifact@v4
        with:
          name: sources
          path: sources

  build_targets_on_linux_s390x_cross:
    name: Build cross
    runs-on: ubuntu-latest
    needs:
      - init
    strategy:
      fail-fast: false
      matrix:
        targets: ${{ fromJSON(needs.init.outputs.TARGETS) }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: sources
          path: sources

      - uses: uraimo/run-on-arch-action@v2
        name: Build
        id: build
        with:
          arch: s390x
          distro: alpine_latest
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/build"
          shell: /bin/sh
          install: |
            apk add --no-cache \
              coreutils \
              curl \
              bzip2 \
              xz \
              make \
              bison \
              rsync \
              patch \
              perl
          run: |
            cd /build
            NATIVE_COMPILER="https://github.com/${{ github.repository }}/releases/download/${{ env.USE_NATIVE_VERSION }}/s390x-linux-musl-native-${{ env.UNAMESPACER }}.tgz"
            echo "try install $NATIVE_COMPILER"
            NATIVE_COMPILER_STATUS=$(curl -sILo /dev/null -w "%{http_code}\n" $NATIVE_COMPILER)
            echo "status: $NATIVE_COMPILER_STATUS"
            if [ $NATIVE_COMPILER_STATUS -ne 200 ]; then apk add --no-cache g++; else mkdir -p "s390x-linux-musl-native" && curl -sL "$NATIVE_COMPILER" | tar -zxf - -C "s390x-linux-musl-native" --strip-components 1 && chmod -R 0755 s390x-linux-musl-native && export PATH="$PWD/s390x-linux-musl-native/bin:$PATH"; fi
            sh scripts/build.sh \
                -LDPO1 \
                -T "${{ matrix.targets }}"

      - name: Upload ${{ matrix.targets }} cross
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targets }}-cross
          path: dist/${{ matrix.targets }}-cross

  # build_targets_on_linux_s390x_native:
  #   name: Build native
  #   runs-on: ubuntu-latest
  #   needs:
  #     - init
  #     - build_targets_on_linux_s390x_cross
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       targets: ${{ fromJSON(needs.init.outputs.TARGETS) }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: ${{ matrix.targets }}-cross
  #         path: dist/${{ matrix.targets }}-cross

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: sources
  #         path: sources

  #     - uses: uraimo/run-on-arch-action@v2
  #       name: Build
  #       id: build
  #       with:
  #         arch: s390x
  #         distro: alpine_latest
  #         githubToken: ${{ github.token }}
  #         dockerRunArgs: |
  #           --volume "${PWD}:/build"
  #         shell: /bin/sh
  #         install: |
  #           apk add --no-cache \
  #             coreutils \
  #             curl \
  #             bzip2 \
  #             xz \
  #             make \
  #             bison \
  #             rsync \
  #             patch \
  #             perl
  #         run: |
  #           cd /build
  #           chmod -R 0755 dist/${{ matrix.targets }}-cross
  #           NATIVE_COMPILER="https://github.com/${{ github.repository }}/releases/download/${{ env.USE_NATIVE_VERSION }}/s390x-linux-musl-native-${{ env.UNAMESPACER }}.tgz"
  #           echo "try install $NATIVE_COMPILER"
  #           NATIVE_COMPILER_STATUS=$(curl -sILo /dev/null -w "%{http_code}\n" $NATIVE_COMPILER)
  #           echo "status: $NATIVE_COMPILER_STATUS"
  #           if [ $NATIVE_COMPILER_STATUS -ne 200 ]; then apk add --no-cache g++; else mkdir -p "s390x-linux-musl-native" && curl -sL "$NATIVE_COMPILER" | tar -zxf - -C "s390x-linux-musl-native" --strip-components 1 && chmod -R 0755 s390x-linux-musl-native && export PATH="$PWD/s390x-linux-musl-native/bin:$PATH"; fi
  #           sh scripts/build.sh \
  #               -NLDPO1 \
  #               -T "${{ matrix.targets }}"

  #     - name: Upload ${{ matrix.targets }} native
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ matrix.targets }}-native
  #         path: dist/${{ matrix.targets }}-native
